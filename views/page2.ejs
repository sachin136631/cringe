<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Pop-Up Effect</title>
  <style>
    /* Base Styles */
    body {
      margin: 0;
      overflow: hidden;
      background: linear-gradient(to bottom, #ff7eb3, #ff4d88);
      font-family: 'Arial', sans-serif;
      color: white;
      text-align: center;
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    h1 {
      font-size: 2rem;
      margin-bottom: 20px;
    }

    .popup-text {
      position: absolute;
      font-size: 1.5rem;
      pointer-events: none; /* Prevent text from interfering with clicks */
      animation: float-up 2s linear forwards;
      opacity: 1;
      color: white;
      text-shadow: 0 2px 5px rgba(0, 0, 0, 0.5); /* Add a subtle shadow */
    }

    /* Float-Up Animation */
    @keyframes float-up {
      0% {
        transform: translateY(0);
        opacity: 1;
      }
      100% {
        transform: translateY(-100px);
        opacity: 0;
      }
    }

    /* Video Container */
    .video-container {
      position: relative;
      width: 100px; /* Initial size */
      height: 100px; /* Initial size */
      overflow: hidden;
      border-radius: 20px; /* Rounded corners */
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
      transition: all 2s ease-in-out; /* Smooth scaling */
    }

    /* Video Element */
    .video-container video {
      width: 100%;
      height: 100%;
      object-fit: cover; /* Ensures the video fills the container */
      border-radius: 20px;
    }

    /* Scaling Effect */
    .video-container.playing {
      transform: scale(2); /* Increase size by 2x */
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5); /* Enhanced shadow */
    }

    /* Unmute Button */
    .unmute-btn {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: rgba(0, 0, 0, 0.7);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 20px;
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .unmute-btn:hover {
      background-color: rgba(0, 0, 0, 0.9);
    }
  </style>
</head>
<body>
  <!-- Video Container -->
  <div class="video-container" id="videoContainer">
    <video id="video" src="mot.mp4" autoplay muted loop></video>
    <button class="unmute-btn" id="unmuteBtn">ðŸ”Š Unmute</button>
  </div>

  <script>
    // Array of cringe-worthy texts
    const texts = ["valla panikkum podaa"];

    // Throttle function to limit text creation
    let lastTextTime = 0; // Track the last time text was created
    const textThrottleDelay = 500; // Minimum delay between texts (in milliseconds)

    // Probability check to further reduce pop-ups
    const probabilityThreshold = 0.3; // 30% chance of creating a pop-up

    // Listen for mouse movement
    document.addEventListener('mousemove', (event) => {
      const currentTime = Date.now();

      // Only create text if enough time has passed since the last one
      if (currentTime - lastTextTime > textThrottleDelay) {
        // Probability check to reduce frequency further
        if (Math.random() < probabilityThreshold) {
          lastTextTime = currentTime;

          // Create a new text element
          const textElement = document.createElement('div');
          textElement.textContent = texts[Math.floor(Math.random() * texts.length)];
          textElement.classList.add('popup-text');

          // Position the text at the cursor's location
          textElement.style.left = `${event.clientX}px`;
          textElement.style.top = `${event.clientY}px`;

          // Add the text to the body
          document.body.appendChild(textElement);

          // Remove the text after the animation ends
          textElement.addEventListener('animationend', () => {
            textElement.remove();
          });
        }
      }
    });

    // Select elements
    const video = document.getElementById('video');
    const videoContainer = document.getElementById('videoContainer');
    const unmuteBtn = document.getElementById('unmuteBtn');

    // Add event listener for when the video starts playing
    video.addEventListener('play', () => {
      videoContainer.classList.add('playing'); // Trigger the scaling effect
    });

    // Optional: Reset video when it ends
    video.addEventListener('ended', () => {
      videoContainer.classList.remove('playing'); // Reset the scaling effect
      video.currentTime = 0; // Restart the video
    });

    // Unmute functionality
    unmuteBtn.addEventListener('click', () => {
      video.muted = false; // Unmute the video
      unmuteBtn.style.display = 'none'; // Hide the unmute button
    });
  </script>
</body>
</html>